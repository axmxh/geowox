{"version":3,"sources":["components/Filters.js","components/Stats.js","components/Details.js","components/StreetView.js","components/PropertyDetails.js","components/PropertyMap.js","config.js","App.js","serviceWorker.js","index.js"],"names":["Filters","properties","handleFilterChange","propertyTypes","bedrooms","bathrooms","className","onChange","defaultValue","name","id","value","map","property","i","key","toLowerCase","bedroom","bathroom","Stats","data","height","style","labels","fill","fontSize","fontWeight","datum","x","labelRadius","innerRadius","padding","labelPlacement","index","Details","children","StreetView","PropertyDetails","console","log","price","beds","baths","type","address","sqm","toFixed","replace","mapStyles","width","GoogleApiWrapper","apiKey","google","mapCenter","setSelectedProperty","useEffect","lat","zoom","initialCenter","length","position","lng","lon","onClick","App","useState","selectedProperty","filteredProperties","setFilteredProperties","setMapCenter","filters","setFilters","Set","filterProperties","keys","Object","result","values","filter","every","includes","avaLat","avaLon","forEach","calcMapCenter","e","target","typeLength","y","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb50eacd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.scss\";\n\nfunction Filters({\n  properties,\n  handleFilterChange,\n  propertyTypes,\n  bedrooms,\n  bathrooms\n}) {\n  return (\n    <div className=\"filters\">\n      <h4>Filters</h4>\n      <div className=\"filters__body\">\n        <select\n          onChange={handleFilterChange}\n          defaultValue=\"\"\n          name=\"type\"\n          id=\"propertyType\"\n        >\n          <option value=\"\">Property Type</option>\n          {propertyTypes.map((property, i) => {\n            return (\n              <option key={i} value={property}>\n                {property.toLowerCase()}\n              </option>\n            );\n          })}\n        </select>\n\n        <select\n          onChange={handleFilterChange}\n          defaultValue=\"\"\n          name=\"beds\"\n          id=\"bedrooms\"\n        >\n          <option value=\"\">Bedrooms</option>\n          {bedrooms.map((bedroom, i) => {\n            if (bedroom === \"\") bedroom = \"N/A\";\n            return (\n              <option key={i} value={bedroom}>\n                {bedroom}\n              </option>\n            );\n          })}\n        </select>\n        <select\n          onChange={handleFilterChange}\n          defaultValue=\"\"\n          name=\"baths\"\n          id=\"bathrooms\"\n        >\n          <option value=\"\">Bathrooms</option>\n          {bathrooms.map((bathroom, i) => {\n            if (bathroom === \"\") bathroom = \"N/A\";\n            return (\n              <option key={i} value={bathroom}>\n                {bathroom}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport { VictoryPie, VictoryLabel } from \"victory\";\n\nfunction Stats({ data }) {\n  return (\n    <div className=\"stats\">\n      <h4>Property Type</h4>\n      <VictoryPie\n        data={data}\n        height={250}\n        // colorScale={[\"#5e74db\", \"#64B7F1\", \"#00B7D7\", \"#E8E8E8\", \"#FAFAFA\"]}\n        style={{ labels: { fill: \"white\", fontSize: 8, fontWeight: \"bold\" } }}\n        labels={({ datum }) => datum.x}\n        labelRadius={({ innerRadius }) => innerRadius + 20}\n        padding={20}\n        labelPlacement={({ index }) => (index ? \"parallel\" : \"vertical\")}\n      />\n    </div>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction Details({ children }) {\n  return <div className=\"details\">{children}</div>;\n}\n\nexport default Details;\n","import React from \"react\";\n\nfunction StreetView() {\n  return (\n    <div>\n      {/* <h6>StreetView</h6>\n      <>To be implemented</> */}\n    </div>\n  );\n}\n\nexport default StreetView;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport StreetView from \"./StreetView\";\n\nfunction PropertyDetails({ property }) {\n  console.log(\"property.price, \", property?.price);\n  return (\n    <div className=\"property__details\">\n      {property ? (\n        <>\n          <h4>Property Details</h4>\n          <div className=\"property__details-img\">\n            <StreetView property={property} />\n          </div>\n          <div className=\"property__details-rooms\">\n            <div className=\"beds\">\n              <h6>Beds</h6>\n              <p>{property.beds || \"N/A\"}</p>\n            </div>\n            <div className=\"baths\">\n              <h6>Baths</h6>\n              <p>{property.baths || \"N/A\"}</p>\n            </div>\n          </div>\n          <div className=\"property__details-info\">\n            <div className=\"property__type\">\n              <h6>Property Type</h6>\n              <p>{property.type.toLowerCase()}</p>\n            </div>\n            <div className=\"property__address\">\n              <h6>Address</h6>\n              <p>{property.address.toLowerCase() || \"N/A\"}</p>\n            </div>\n            <div className=\"property__sqm\">\n              <h6>Sqm</h6>\n              <p>{property.sqm || \"N/A\"}</p>\n            </div>\n            <div className=\"property__price\">\n              <h6>Price</h6>\n              <p>\n                {(property.price !== \"\" &&\n                  \"â‚¬\" +\n                    property.price\n                      ?.toFixed(2)\n                      ?.replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")) ||\n                  \"N/A\"}\n              </p>\n            </div>\n          </div>\n        </>\n      ) : (\n        <p className=\"no__details\">\n          Please use filters and select from map to see the details here\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default PropertyDetails;\n","import React, { useEffect } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { API_KEY } from \"../config\";\nimport \"./styles.scss\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"80%\"\n};\n\nfunction PropertyMap({ google, properties, mapCenter, setSelectedProperty }) {\n  useEffect(() => {}, [properties]);\n  console.log(\"properties Map\", properties[0]?.lat);\n  const renderMarkers = () => {\n    if (properties.length === 0) {\n      return;\n    } else {\n      return properties.map((property, i) => {\n        return (\n          <Marker\n            key={i}\n            id={i}\n            position={{\n              lat: property.lat,\n              lng: property.lon\n            }}\n            onClick={() => setSelectedProperty(properties[i])}\n          />\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"property__map\">\n      <Map\n        google={google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={mapCenter}\n      >\n        {renderMarkers()}\n      </Map>\n    </div>\n  );\n}\n\n// export default PropertyMap;\n\nexport default GoogleApiWrapper({\n  apiKey: API_KEY\n})(PropertyMap);\n","export const API_KEY = \"AIzaSyChQa_hFexUDN2vhcjnDnRHKsSqEMFWumE\";\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport data from \"./sample_data.json\";\nimport Filters from \"./components/Filters\";\nimport Stats from \"./components/Stats\";\nimport Details from \"./components/Details\";\nimport PropertyDetails from \"./components/PropertyDetails\";\nimport PropertyMap from \"./components/PropertyMap\";\n\nfunction App() {\n  const [properties] = useState(data);\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const [filteredProperties, setFilteredProperties] = useState([]);\n  const [mapCenter, setMapCenter] = useState(null);\n  const [filters, setFilters] = useState({});\n\n  const [propertyTypes] = useState([\n    ...new Set(properties.map((property) => property.type))\n  ]);\n  const [bedrooms] = useState([\n    ...new Set(properties.map((property) => property.beds))\n  ]);\n\n  const [bathrooms] = useState([\n    ...new Set(properties.map((property) => property.baths))\n  ]);\n\n  const filterProperties = (properties, name, value) => {\n    const keys = Object.keys(filters);\n    const values = Object.values(filters);\n\n    const result = properties.filter((property) => {\n      return keys.every((key) => {\n        if (!filters[key].length) {\n          return true; // passing an empty filter  ===  filter is ignored.\n        }\n        return filters[key].includes(property[key]);\n      });\n    });\n\n    console.log(\"result\", result);\n\n    return result;\n  };\n\n  const handleFilterChange = (e) => {\n    setFilters({ ...filters, [e.target.name]: e.target.value });\n    setSelectedProperty(null);\n    filterProperties(properties);\n  };\n  console.log(\"filters\", filters);\n\n  const calcMapCenter = () => {\n    // debugger;\n    let avaLat = 0;\n    let avaLon = 0;\n    const length = properties?.length;\n\n    if (length > 0) {\n      properties.forEach((property) => {\n        avaLat += property.lat;\n        avaLon += property.lon;\n      });\n      avaLat = avaLat / length;\n      avaLon = avaLon / length;\n      return { lat: avaLat, lng: avaLon };\n    }\n  };\n\n  const generateChartData = () => {\n    return propertyTypes.map((type) => {\n      const typeLength = properties.filter((property) => property.type === type)\n        .length;\n      const typePercentage = (typeLength / properties.length) * 100;\n      return { x: type, y: typeLength };\n    });\n  };\n\n  useEffect(() => {\n    // console.log(\"properties\", properties);\n    if (mapCenter === null) setMapCenter(calcMapCenter());\n\n    if (filteredProperties.length === 0) {\n      setSelectedProperty(null);\n    }\n    if (filters.type || filters.beds || filters.baths) {\n      setFilteredProperties(filterProperties(properties));\n    }\n  }, [mapCenter, filters]);\n\n  //   console.log(\"filteredProperties\", filteredProperties);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__top\">\n        <Filters\n          handleFilterChange={handleFilterChange}\n          properties={properties}\n          propertyTypes={propertyTypes}\n          bedrooms={bedrooms}\n          bathrooms={bathrooms}\n        />\n        <Stats data={generateChartData()} />\n      </div>\n      <div className=\"app__bottom\">\n        <Details>\n          <PropertyDetails property={selectedProperty} />\n          <PropertyMap\n            mapCenter={mapCenter}\n            properties={filteredProperties}\n            setSelectedProperty={setSelectedProperty}\n          />\n        </Details>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}